version: 2.1
commands:
  buildAndPublishDockerImage:
    description: "A set of commands to build and publish a Docker image to a specific Docker repo."
    parameters:
      pass:
        type: string
        default: ""
      user:
        type: string
        default: ""
      registry:
        type: string
        default: ""
      imageName:
        type: string
        default: "homepage"
      imageTag:
        type: string
        default: ""
      imageTagArm:
        type: string
        default: ""
    steps:
      name: Build and push Docker images.
      command: |
        echo << parameters.pass >> | docker login << parameters.registry >> -u << parameters.user >> --password-stdin

        IMAGE_NAME=<< parameters.registry >>/<< parameters.user >>/<< parameters.imageName >>:<< parameters.imageTag >>
        IMAGE_NAME_ARM=<< parameters.registry >>/<< parameters.user >>/<< parameters.imageName >>:<< parameters.imageTagArm >>

        docker build -f Dockerfile -t $IMAGE_NAME .
        docker build -f Dockerfile.arm64v8 -t $IMAGE_NAME_ARM .

        docker push $IMAGE_NAME
        docker push $IMAGE_NAME_ARM

jobs:
  build-staging:
    machine: true
    steps:
      - checkout

      - buildAndPublishDockerImage:
          pass: $DOCKER_PASS
          user: $DOCKER_USER
          registry: $DOCKER_REGISTRY
          imageName: "homepage"
          imageTag: staging-v$CIRCLE_WORKFLOW_ID
          imageTagArm: arm-staging-v$CIRCLE_WORKFLOW_ID

  deploy-staging:
    machine: true
    steps:
      - checkout

      - kube-orb/install-kubeconfig:
          kubeconfig: KUBECONFIG_DATA

      - kube-orb/install-kubectl

      - helm/install-helm-client:
          version: v3.0.2

      - run:
          name: Add Helm repo
          command: helm repo add stable https://kubernetes-charts.storage.googleapis.com/

      - run:
          name: Install Helm chart
          command: |
            IMAGE_VERSION=arm-staging-v$CIRCLE_WORKFLOW_ID
            NAMESPACE=homepage-staging

            helm upgrade homepage ./chart \
              --set image.version=$IMAGE_VERSION \
              --namespace $NAMESPACE \
              --install

  build-prod:
    machine: true
    steps:
      - checkout

      - run:
          name: Build and push Docker images.
          command: |
            echo $DOCKER_PASS | docker login $DOCKER_REGISTRY -u $DOCKER_USER --password-stdin

            IMAGE_NAME=$DOCKER_REGISTRY/$DOCKER_USER/homepage:v$CIRCLE_WORKFLOW_ID
            IMAGE_NAME_ARM=$DOCKER_REGISTRY/$DOCKER_USER/homepage:armv$CIRCLE_WORKFLOW_ID

            docker build -f Dockerfile -t $IMAGE_NAME .
            docker build -f Dockerfile.arm64v8 -t $IMAGE_NAME_ARM .

            docker push $IMAGE_NAME
            docker push $IMAGE_NAME_ARM

  deploy-prod:
    machine: true
    steps:
      - checkout

      - kube-orb/install-kubeconfig:
          kubeconfig: KUBECONFIG_DATA

      - kube-orb/install-kubectl

      - helm/install-helm-client:
          version: v3.0.2

      - run:
          name: Add Helm repo
          command: helm repo add stable https://kubernetes-charts.storage.googleapis.com/

      - run:
          name: Install Helm chart
          command: |
            IMAGE_VERSION=armv$CIRCLE_WORKFLOW_ID
            HOSTNAME=tudorpopa.com
            HOSTPATH=/
            NAMESPACE=homepage-prod

            helm upgrade homepage ./chart \
              --set image.version=$IMAGE_VERSION \
              --set ingress.hosts[0].host=$HOSTNAME \
              --set ingress.hosts[0].paths[0]=$HOSTPATH \
              --namespace $NAMESPACE \
              --install

workflows:
  version: 2
  build-staging-and-deploy:
    jobs:
      - build-staging:
          filters:
            branches:
              ignore:
                - master

      - deploy-staging:
          requires:
            - build-staging
          filters:
            branches:
              ignore:
                - master

  build-production-and-deploy:
    jobs:
      - build-prod:
          filters:
            branches:
              only:
                - master

      - deploy-prod:
          requires:
            - build-prod
          filters:
            branches:
              only:
                - master

orbs:
  kube-orb: circleci/kubernetes@0.11.0
  helm: circleci/helm@0.2.3
